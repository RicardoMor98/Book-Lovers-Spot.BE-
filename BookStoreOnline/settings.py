"""
Django settings for BookStoreOnline project.

Generated by 'django-admin startproject' using Django 3.2.25.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""


import os
import cloudinary
import cloudinary.uploader
import cloudinary.api


from pathlib import Path


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-a$)j3a+x8ekygno(@#)1vh3*k(*4c@817gp4vkmmvmf_qz)0tv'




CLOUDINARY_STORAGE = {
    "CLOUD_NAME": "dqblj4qow",
    "API_KEY": "934671791378734",
    "API_SECRET": "qeXkqbLS-XK9sbw_ZwuPF59hQbk",
}

# Use the credentials in the Cloudinary configuration
cloudinary.config(
    cloud_name=CLOUDINARY_STORAGE["CLOUD_NAME"],
    api_key=CLOUDINARY_STORAGE["API_KEY"],
    api_secret=CLOUDINARY_STORAGE["API_SECRET"],
)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

CORS_ORIGIN_WHITELIST = [
'https://ricardomor9-bookloverss-ipld6p1s217.ws-eu118.gitpod.io:8000',
'https://ricardomor9-bookloverss-al869cj9kmu.ws-eu118.gitpod.io:8080'
]


CORS_ALLOW_ALL_ORIGINS = True

CORS_ALLOWED_ORIGINS = [
    "https://8000-ricardomor9-bookloverss-ipld6p1s217.ws-us118.gitpod.io",
    "https://8080-ricardomor9-bookloverss-al869cj9kmu.ws-eu118.gitpod.io"
]


CSRF_TRUSTED_ORIGINS = [
    "https://8000-ricardomor9-bookloverss-ipld6p1s217.ws-us118.gitpod.io",
    "https://8080-ricardomor9-bookloverss-al869cj9kmu.ws-eu118.gitpod.io"
]

CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_METHODS = ["GET", "POST", "PUT", "PATCH", "DELETE", "OPTIONS"]
CORS_ALLOW_HEADERS = ["*"]
DEBUG = True



ALLOWED_HOSTS = [
    "127.0.0.1",
    "localhost",
    "8000-ricardomor9-bookloverss-ipld6p1s217.ws-eu118.gitpod.io",
    "8080-ricardomor9-bookloverss-al869cj9kmu.ws-eu118.gitpod.io",
    "8000-ricardomor9-bookloverss-ipld6p1s217.ws-us118.gitpod.io",
    "8080-ricardomor9-bookloverss-al869cj9kmu.ws-us118.gitpod.io",
]

# Application definition

INSTALLED_APPS = [

    "corsheaders",  
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.sessions',
    'django.contrib.contenttypes',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'cloudinary_storage',  # Cloudinary storage for handling media files
    'cloudinary',  # Cloudinary library for handling images
    "rest_framework",
    'api',
]



MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'api.custom_cors_middleware.CustomCorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',    
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
]

ROOT_URLCONF = 'BookStoreOnline.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'BookStoreOnline.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'vowel_lift_baker_299094',
        'USER': 'neondb_owner',
        'PASSWORD': '6YOljasQ7UJW',
        'HOST': 'ep-old-salad-a2ydjd21.eu-central-1.aws.neon.tech',
        'PORT': '5432',  # Default PostgreSQL port
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

SESSION_ENGINE = "django.contrib.sessions.backends.db"

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',  # Default backend
]
